//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Traderdata.Client.TerminalWEB.MDApiSVC {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AtivoDTO.ReturnType", Namespace="http://schemas.datacontract.org/2004/07/Traderdata.Server.Core.DTO")]
    public enum AtivoDTOReturnType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullString = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShortString = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MDApiSVC.IMarketDataWCF")]
    public interface IMarketDataWCF {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMarketDataWCF/ValidaToken", ReplyAction="http://tempuri.org/IMarketDataWCF/ValidaTokenResponse")]
        System.IAsyncResult BeginValidaToken(string token, System.AsyncCallback callback, object asyncState);
        
        bool EndValidaToken(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMarketDataWCF/RetornaTimeDifferenceBetweenUTCAndExchange", ReplyAction="http://tempuri.org/IMarketDataWCF/RetornaTimeDifferenceBetweenUTCAndExchangeRespo" +
            "nse")]
        System.IAsyncResult BeginRetornaTimeDifferenceBetweenUTCAndExchange(System.AsyncCallback callback, object asyncState);
        
        int EndRetornaTimeDifferenceBetweenUTCAndExchange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMarketDataWCF/RetornaDataDoServidor", ReplyAction="http://tempuri.org/IMarketDataWCF/RetornaDataDoServidorResponse")]
        System.IAsyncResult BeginRetornaDataDoServidor(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndRetornaDataDoServidor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMarketDataWCF/GetCorretoras", ReplyAction="http://tempuri.org/IMarketDataWCF/GetCorretorasResponse")]
        System.IAsyncResult BeginGetCorretoras(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetCorretoras(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMarketDataWCF/GetSegmentos", ReplyAction="http://tempuri.org/IMarketDataWCF/GetSegmentosResponse")]
        System.IAsyncResult BeginGetSegmentos(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetSegmentos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMarketDataWCF/GetIndices", ReplyAction="http://tempuri.org/IMarketDataWCF/GetIndicesResponse")]
        System.IAsyncResult BeginGetIndices(bool incluirAtivos, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetIndices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMarketDataWCF/GetAtivos", ReplyAction="http://tempuri.org/IMarketDataWCF/GetAtivosResponse")]
        System.IAsyncResult BeginGetAtivos(string querySymbol, System.Nullable<int> exchange, string tipo, Traderdata.Client.TerminalWEB.MDApiSVC.AtivoDTOReturnType formatoEntrega, string segmento, int maxResults, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetAtivos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMarketDataWCF/GetAtivosByIndice", ReplyAction="http://tempuri.org/IMarketDataWCF/GetAtivosByIndiceResponse")]
        System.IAsyncResult BeginGetAtivosByIndice(string indice, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetAtivosByIndice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMarketDataWCF/GetCotacao", ReplyAction="http://tempuri.org/IMarketDataWCF/GetCotacaoResponse")]
        System.IAsyncResult BeginGetCotacao(string ativo, Traderdata.Server.Core.DTO.CotacaoDTO.BasePeriodicity basePeriodicity, int compression, System.Nullable<System.DateTime> de, System.Nullable<System.DateTime> ate, System.Nullable<bool> delay, System.Nullable<int> maxBarras, bool nominal, bool afterMarket, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetCotacao(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMarketDataWCF/GetTrades", ReplyAction="http://tempuri.org/IMarketDataWCF/GetTradesResponse")]
        System.IAsyncResult BeginGetTrades(string ativo, System.DateTime de, System.DateTime ate, string orderBy, int limiteTrades, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetTrades(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMarketDataWCF/GetPrincipaisCompradores", ReplyAction="http://tempuri.org/IMarketDataWCF/GetPrincipaisCompradoresResponse")]
        System.IAsyncResult BeginGetPrincipaisCompradores(string ativo, System.DateTime dtFrom, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<int, double> EndGetPrincipaisCompradores(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMarketDataWCF/GetPrincipaisVendedores", ReplyAction="http://tempuri.org/IMarketDataWCF/GetPrincipaisVendedoresResponse")]
        System.IAsyncResult BeginGetPrincipaisVendedores(string ativo, System.DateTime dtFrom, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<int, double> EndGetPrincipaisVendedores(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMarketDataWCFChannel : Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidaTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidaTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetornaTimeDifferenceBetweenUTCAndExchangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetornaTimeDifferenceBetweenUTCAndExchangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetornaDataDoServidorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetornaDataDoServidorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCorretorasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCorretorasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSegmentosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSegmentosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIndicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIndicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAtivosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAtivosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAtivosByIndiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAtivosByIndiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCotacaoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCotacaoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPrincipaisCompradoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPrincipaisCompradoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<int, double> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<int, double>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPrincipaisVendedoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPrincipaisVendedoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<int, double> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<int, double>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MarketDataWCFClient : System.ServiceModel.ClientBase<Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF>, Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF {
        
        private BeginOperationDelegate onBeginValidaTokenDelegate;
        
        private EndOperationDelegate onEndValidaTokenDelegate;
        
        private System.Threading.SendOrPostCallback onValidaTokenCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetornaTimeDifferenceBetweenUTCAndExchangeDelegate;
        
        private EndOperationDelegate onEndRetornaTimeDifferenceBetweenUTCAndExchangeDelegate;
        
        private System.Threading.SendOrPostCallback onRetornaTimeDifferenceBetweenUTCAndExchangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetornaDataDoServidorDelegate;
        
        private EndOperationDelegate onEndRetornaDataDoServidorDelegate;
        
        private System.Threading.SendOrPostCallback onRetornaDataDoServidorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCorretorasDelegate;
        
        private EndOperationDelegate onEndGetCorretorasDelegate;
        
        private System.Threading.SendOrPostCallback onGetCorretorasCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSegmentosDelegate;
        
        private EndOperationDelegate onEndGetSegmentosDelegate;
        
        private System.Threading.SendOrPostCallback onGetSegmentosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIndicesDelegate;
        
        private EndOperationDelegate onEndGetIndicesDelegate;
        
        private System.Threading.SendOrPostCallback onGetIndicesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAtivosDelegate;
        
        private EndOperationDelegate onEndGetAtivosDelegate;
        
        private System.Threading.SendOrPostCallback onGetAtivosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAtivosByIndiceDelegate;
        
        private EndOperationDelegate onEndGetAtivosByIndiceDelegate;
        
        private System.Threading.SendOrPostCallback onGetAtivosByIndiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCotacaoDelegate;
        
        private EndOperationDelegate onEndGetCotacaoDelegate;
        
        private System.Threading.SendOrPostCallback onGetCotacaoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTradesDelegate;
        
        private EndOperationDelegate onEndGetTradesDelegate;
        
        private System.Threading.SendOrPostCallback onGetTradesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPrincipaisCompradoresDelegate;
        
        private EndOperationDelegate onEndGetPrincipaisCompradoresDelegate;
        
        private System.Threading.SendOrPostCallback onGetPrincipaisCompradoresCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPrincipaisVendedoresDelegate;
        
        private EndOperationDelegate onEndGetPrincipaisVendedoresDelegate;
        
        private System.Threading.SendOrPostCallback onGetPrincipaisVendedoresCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MarketDataWCFClient() {
        }
        
        public MarketDataWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MarketDataWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MarketDataWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MarketDataWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ValidaTokenCompletedEventArgs> ValidaTokenCompleted;
        
        public event System.EventHandler<RetornaTimeDifferenceBetweenUTCAndExchangeCompletedEventArgs> RetornaTimeDifferenceBetweenUTCAndExchangeCompleted;
        
        public event System.EventHandler<RetornaDataDoServidorCompletedEventArgs> RetornaDataDoServidorCompleted;
        
        public event System.EventHandler<GetCorretorasCompletedEventArgs> GetCorretorasCompleted;
        
        public event System.EventHandler<GetSegmentosCompletedEventArgs> GetSegmentosCompleted;
        
        public event System.EventHandler<GetIndicesCompletedEventArgs> GetIndicesCompleted;
        
        public event System.EventHandler<GetAtivosCompletedEventArgs> GetAtivosCompleted;
        
        public event System.EventHandler<GetAtivosByIndiceCompletedEventArgs> GetAtivosByIndiceCompleted;
        
        public event System.EventHandler<GetCotacaoCompletedEventArgs> GetCotacaoCompleted;
        
        public event System.EventHandler<GetTradesCompletedEventArgs> GetTradesCompleted;
        
        public event System.EventHandler<GetPrincipaisCompradoresCompletedEventArgs> GetPrincipaisCompradoresCompleted;
        
        public event System.EventHandler<GetPrincipaisVendedoresCompletedEventArgs> GetPrincipaisVendedoresCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.BeginValidaToken(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidaToken(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.EndValidaToken(System.IAsyncResult result) {
            return base.Channel.EndValidaToken(result);
        }
        
        private System.IAsyncResult OnBeginValidaToken(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).BeginValidaToken(token, callback, asyncState);
        }
        
        private object[] OnEndValidaToken(System.IAsyncResult result) {
            bool retVal = ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).EndValidaToken(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidaTokenCompleted(object state) {
            if ((this.ValidaTokenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidaTokenCompleted(this, new ValidaTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidaTokenAsync(string token) {
            this.ValidaTokenAsync(token, null);
        }
        
        public void ValidaTokenAsync(string token, object userState) {
            if ((this.onBeginValidaTokenDelegate == null)) {
                this.onBeginValidaTokenDelegate = new BeginOperationDelegate(this.OnBeginValidaToken);
            }
            if ((this.onEndValidaTokenDelegate == null)) {
                this.onEndValidaTokenDelegate = new EndOperationDelegate(this.OnEndValidaToken);
            }
            if ((this.onValidaTokenCompletedDelegate == null)) {
                this.onValidaTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidaTokenCompleted);
            }
            base.InvokeAsync(this.onBeginValidaTokenDelegate, new object[] {
                        token}, this.onEndValidaTokenDelegate, this.onValidaTokenCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.BeginRetornaTimeDifferenceBetweenUTCAndExchange(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetornaTimeDifferenceBetweenUTCAndExchange(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.EndRetornaTimeDifferenceBetweenUTCAndExchange(System.IAsyncResult result) {
            return base.Channel.EndRetornaTimeDifferenceBetweenUTCAndExchange(result);
        }
        
        private System.IAsyncResult OnBeginRetornaTimeDifferenceBetweenUTCAndExchange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).BeginRetornaTimeDifferenceBetweenUTCAndExchange(callback, asyncState);
        }
        
        private object[] OnEndRetornaTimeDifferenceBetweenUTCAndExchange(System.IAsyncResult result) {
            int retVal = ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).EndRetornaTimeDifferenceBetweenUTCAndExchange(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetornaTimeDifferenceBetweenUTCAndExchangeCompleted(object state) {
            if ((this.RetornaTimeDifferenceBetweenUTCAndExchangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetornaTimeDifferenceBetweenUTCAndExchangeCompleted(this, new RetornaTimeDifferenceBetweenUTCAndExchangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetornaTimeDifferenceBetweenUTCAndExchangeAsync() {
            this.RetornaTimeDifferenceBetweenUTCAndExchangeAsync(null);
        }
        
        public void RetornaTimeDifferenceBetweenUTCAndExchangeAsync(object userState) {
            if ((this.onBeginRetornaTimeDifferenceBetweenUTCAndExchangeDelegate == null)) {
                this.onBeginRetornaTimeDifferenceBetweenUTCAndExchangeDelegate = new BeginOperationDelegate(this.OnBeginRetornaTimeDifferenceBetweenUTCAndExchange);
            }
            if ((this.onEndRetornaTimeDifferenceBetweenUTCAndExchangeDelegate == null)) {
                this.onEndRetornaTimeDifferenceBetweenUTCAndExchangeDelegate = new EndOperationDelegate(this.OnEndRetornaTimeDifferenceBetweenUTCAndExchange);
            }
            if ((this.onRetornaTimeDifferenceBetweenUTCAndExchangeCompletedDelegate == null)) {
                this.onRetornaTimeDifferenceBetweenUTCAndExchangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetornaTimeDifferenceBetweenUTCAndExchangeCompleted);
            }
            base.InvokeAsync(this.onBeginRetornaTimeDifferenceBetweenUTCAndExchangeDelegate, null, this.onEndRetornaTimeDifferenceBetweenUTCAndExchangeDelegate, this.onRetornaTimeDifferenceBetweenUTCAndExchangeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.BeginRetornaDataDoServidor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetornaDataDoServidor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.EndRetornaDataDoServidor(System.IAsyncResult result) {
            return base.Channel.EndRetornaDataDoServidor(result);
        }
        
        private System.IAsyncResult OnBeginRetornaDataDoServidor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).BeginRetornaDataDoServidor(callback, asyncState);
        }
        
        private object[] OnEndRetornaDataDoServidor(System.IAsyncResult result) {
            System.DateTime retVal = ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).EndRetornaDataDoServidor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetornaDataDoServidorCompleted(object state) {
            if ((this.RetornaDataDoServidorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetornaDataDoServidorCompleted(this, new RetornaDataDoServidorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetornaDataDoServidorAsync() {
            this.RetornaDataDoServidorAsync(null);
        }
        
        public void RetornaDataDoServidorAsync(object userState) {
            if ((this.onBeginRetornaDataDoServidorDelegate == null)) {
                this.onBeginRetornaDataDoServidorDelegate = new BeginOperationDelegate(this.OnBeginRetornaDataDoServidor);
            }
            if ((this.onEndRetornaDataDoServidorDelegate == null)) {
                this.onEndRetornaDataDoServidorDelegate = new EndOperationDelegate(this.OnEndRetornaDataDoServidor);
            }
            if ((this.onRetornaDataDoServidorCompletedDelegate == null)) {
                this.onRetornaDataDoServidorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetornaDataDoServidorCompleted);
            }
            base.InvokeAsync(this.onBeginRetornaDataDoServidorDelegate, null, this.onEndRetornaDataDoServidorDelegate, this.onRetornaDataDoServidorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.BeginGetCorretoras(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCorretoras(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.EndGetCorretoras(System.IAsyncResult result) {
            return base.Channel.EndGetCorretoras(result);
        }
        
        private System.IAsyncResult OnBeginGetCorretoras(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).BeginGetCorretoras(callback, asyncState);
        }
        
        private object[] OnEndGetCorretoras(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).EndGetCorretoras(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCorretorasCompleted(object state) {
            if ((this.GetCorretorasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCorretorasCompleted(this, new GetCorretorasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCorretorasAsync() {
            this.GetCorretorasAsync(null);
        }
        
        public void GetCorretorasAsync(object userState) {
            if ((this.onBeginGetCorretorasDelegate == null)) {
                this.onBeginGetCorretorasDelegate = new BeginOperationDelegate(this.OnBeginGetCorretoras);
            }
            if ((this.onEndGetCorretorasDelegate == null)) {
                this.onEndGetCorretorasDelegate = new EndOperationDelegate(this.OnEndGetCorretoras);
            }
            if ((this.onGetCorretorasCompletedDelegate == null)) {
                this.onGetCorretorasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCorretorasCompleted);
            }
            base.InvokeAsync(this.onBeginGetCorretorasDelegate, null, this.onEndGetCorretorasDelegate, this.onGetCorretorasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.BeginGetSegmentos(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSegmentos(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.EndGetSegmentos(System.IAsyncResult result) {
            return base.Channel.EndGetSegmentos(result);
        }
        
        private System.IAsyncResult OnBeginGetSegmentos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).BeginGetSegmentos(callback, asyncState);
        }
        
        private object[] OnEndGetSegmentos(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).EndGetSegmentos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSegmentosCompleted(object state) {
            if ((this.GetSegmentosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSegmentosCompleted(this, new GetSegmentosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSegmentosAsync() {
            this.GetSegmentosAsync(null);
        }
        
        public void GetSegmentosAsync(object userState) {
            if ((this.onBeginGetSegmentosDelegate == null)) {
                this.onBeginGetSegmentosDelegate = new BeginOperationDelegate(this.OnBeginGetSegmentos);
            }
            if ((this.onEndGetSegmentosDelegate == null)) {
                this.onEndGetSegmentosDelegate = new EndOperationDelegate(this.OnEndGetSegmentos);
            }
            if ((this.onGetSegmentosCompletedDelegate == null)) {
                this.onGetSegmentosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSegmentosCompleted);
            }
            base.InvokeAsync(this.onBeginGetSegmentosDelegate, null, this.onEndGetSegmentosDelegate, this.onGetSegmentosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.BeginGetIndices(bool incluirAtivos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIndices(incluirAtivos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.EndGetIndices(System.IAsyncResult result) {
            return base.Channel.EndGetIndices(result);
        }
        
        private System.IAsyncResult OnBeginGetIndices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool incluirAtivos = ((bool)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).BeginGetIndices(incluirAtivos, callback, asyncState);
        }
        
        private object[] OnEndGetIndices(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).EndGetIndices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIndicesCompleted(object state) {
            if ((this.GetIndicesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIndicesCompleted(this, new GetIndicesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIndicesAsync(bool incluirAtivos) {
            this.GetIndicesAsync(incluirAtivos, null);
        }
        
        public void GetIndicesAsync(bool incluirAtivos, object userState) {
            if ((this.onBeginGetIndicesDelegate == null)) {
                this.onBeginGetIndicesDelegate = new BeginOperationDelegate(this.OnBeginGetIndices);
            }
            if ((this.onEndGetIndicesDelegate == null)) {
                this.onEndGetIndicesDelegate = new EndOperationDelegate(this.OnEndGetIndices);
            }
            if ((this.onGetIndicesCompletedDelegate == null)) {
                this.onGetIndicesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIndicesCompleted);
            }
            base.InvokeAsync(this.onBeginGetIndicesDelegate, new object[] {
                        incluirAtivos}, this.onEndGetIndicesDelegate, this.onGetIndicesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.BeginGetAtivos(string querySymbol, System.Nullable<int> exchange, string tipo, Traderdata.Client.TerminalWEB.MDApiSVC.AtivoDTOReturnType formatoEntrega, string segmento, int maxResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAtivos(querySymbol, exchange, tipo, formatoEntrega, segmento, maxResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.EndGetAtivos(System.IAsyncResult result) {
            return base.Channel.EndGetAtivos(result);
        }
        
        private System.IAsyncResult OnBeginGetAtivos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string querySymbol = ((string)(inValues[0]));
            System.Nullable<int> exchange = ((System.Nullable<int>)(inValues[1]));
            string tipo = ((string)(inValues[2]));
            Traderdata.Client.TerminalWEB.MDApiSVC.AtivoDTOReturnType formatoEntrega = ((Traderdata.Client.TerminalWEB.MDApiSVC.AtivoDTOReturnType)(inValues[3]));
            string segmento = ((string)(inValues[4]));
            int maxResults = ((int)(inValues[5]));
            return ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).BeginGetAtivos(querySymbol, exchange, tipo, formatoEntrega, segmento, maxResults, callback, asyncState);
        }
        
        private object[] OnEndGetAtivos(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).EndGetAtivos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAtivosCompleted(object state) {
            if ((this.GetAtivosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAtivosCompleted(this, new GetAtivosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAtivosAsync(string querySymbol, System.Nullable<int> exchange, string tipo, Traderdata.Client.TerminalWEB.MDApiSVC.AtivoDTOReturnType formatoEntrega, string segmento, int maxResults) {
            this.GetAtivosAsync(querySymbol, exchange, tipo, formatoEntrega, segmento, maxResults, null);
        }
        
        public void GetAtivosAsync(string querySymbol, System.Nullable<int> exchange, string tipo, Traderdata.Client.TerminalWEB.MDApiSVC.AtivoDTOReturnType formatoEntrega, string segmento, int maxResults, object userState) {
            if ((this.onBeginGetAtivosDelegate == null)) {
                this.onBeginGetAtivosDelegate = new BeginOperationDelegate(this.OnBeginGetAtivos);
            }
            if ((this.onEndGetAtivosDelegate == null)) {
                this.onEndGetAtivosDelegate = new EndOperationDelegate(this.OnEndGetAtivos);
            }
            if ((this.onGetAtivosCompletedDelegate == null)) {
                this.onGetAtivosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAtivosCompleted);
            }
            base.InvokeAsync(this.onBeginGetAtivosDelegate, new object[] {
                        querySymbol,
                        exchange,
                        tipo,
                        formatoEntrega,
                        segmento,
                        maxResults}, this.onEndGetAtivosDelegate, this.onGetAtivosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.BeginGetAtivosByIndice(string indice, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAtivosByIndice(indice, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.EndGetAtivosByIndice(System.IAsyncResult result) {
            return base.Channel.EndGetAtivosByIndice(result);
        }
        
        private System.IAsyncResult OnBeginGetAtivosByIndice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string indice = ((string)(inValues[0]));
            return ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).BeginGetAtivosByIndice(indice, callback, asyncState);
        }
        
        private object[] OnEndGetAtivosByIndice(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).EndGetAtivosByIndice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAtivosByIndiceCompleted(object state) {
            if ((this.GetAtivosByIndiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAtivosByIndiceCompleted(this, new GetAtivosByIndiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAtivosByIndiceAsync(string indice) {
            this.GetAtivosByIndiceAsync(indice, null);
        }
        
        public void GetAtivosByIndiceAsync(string indice, object userState) {
            if ((this.onBeginGetAtivosByIndiceDelegate == null)) {
                this.onBeginGetAtivosByIndiceDelegate = new BeginOperationDelegate(this.OnBeginGetAtivosByIndice);
            }
            if ((this.onEndGetAtivosByIndiceDelegate == null)) {
                this.onEndGetAtivosByIndiceDelegate = new EndOperationDelegate(this.OnEndGetAtivosByIndice);
            }
            if ((this.onGetAtivosByIndiceCompletedDelegate == null)) {
                this.onGetAtivosByIndiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAtivosByIndiceCompleted);
            }
            base.InvokeAsync(this.onBeginGetAtivosByIndiceDelegate, new object[] {
                        indice}, this.onEndGetAtivosByIndiceDelegate, this.onGetAtivosByIndiceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.BeginGetCotacao(string ativo, Traderdata.Server.Core.DTO.CotacaoDTO.BasePeriodicity basePeriodicity, int compression, System.Nullable<System.DateTime> de, System.Nullable<System.DateTime> ate, System.Nullable<bool> delay, System.Nullable<int> maxBarras, bool nominal, bool afterMarket, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCotacao(ativo, basePeriodicity, compression, de, ate, delay, maxBarras, nominal, afterMarket, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.EndGetCotacao(System.IAsyncResult result) {
            return base.Channel.EndGetCotacao(result);
        }
        
        private System.IAsyncResult OnBeginGetCotacao(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ativo = ((string)(inValues[0]));
            Traderdata.Server.Core.DTO.CotacaoDTO.BasePeriodicity basePeriodicity = ((Traderdata.Server.Core.DTO.CotacaoDTO.BasePeriodicity)(inValues[1]));
            int compression = ((int)(inValues[2]));
            System.Nullable<System.DateTime> de = ((System.Nullable<System.DateTime>)(inValues[3]));
            System.Nullable<System.DateTime> ate = ((System.Nullable<System.DateTime>)(inValues[4]));
            System.Nullable<bool> delay = ((System.Nullable<bool>)(inValues[5]));
            System.Nullable<int> maxBarras = ((System.Nullable<int>)(inValues[6]));
            bool nominal = ((bool)(inValues[7]));
            bool afterMarket = ((bool)(inValues[8]));
            return ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).BeginGetCotacao(ativo, basePeriodicity, compression, de, ate, delay, maxBarras, nominal, afterMarket, callback, asyncState);
        }
        
        private object[] OnEndGetCotacao(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).EndGetCotacao(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCotacaoCompleted(object state) {
            if ((this.GetCotacaoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCotacaoCompleted(this, new GetCotacaoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCotacaoAsync(string ativo, Traderdata.Server.Core.DTO.CotacaoDTO.BasePeriodicity basePeriodicity, int compression, System.Nullable<System.DateTime> de, System.Nullable<System.DateTime> ate, System.Nullable<bool> delay, System.Nullable<int> maxBarras, bool nominal, bool afterMarket) {
            this.GetCotacaoAsync(ativo, basePeriodicity, compression, de, ate, delay, maxBarras, nominal, afterMarket, null);
        }
        
        public void GetCotacaoAsync(string ativo, Traderdata.Server.Core.DTO.CotacaoDTO.BasePeriodicity basePeriodicity, int compression, System.Nullable<System.DateTime> de, System.Nullable<System.DateTime> ate, System.Nullable<bool> delay, System.Nullable<int> maxBarras, bool nominal, bool afterMarket, object userState) {
            if ((this.onBeginGetCotacaoDelegate == null)) {
                this.onBeginGetCotacaoDelegate = new BeginOperationDelegate(this.OnBeginGetCotacao);
            }
            if ((this.onEndGetCotacaoDelegate == null)) {
                this.onEndGetCotacaoDelegate = new EndOperationDelegate(this.OnEndGetCotacao);
            }
            if ((this.onGetCotacaoCompletedDelegate == null)) {
                this.onGetCotacaoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCotacaoCompleted);
            }
            base.InvokeAsync(this.onBeginGetCotacaoDelegate, new object[] {
                        ativo,
                        basePeriodicity,
                        compression,
                        de,
                        ate,
                        delay,
                        maxBarras,
                        nominal,
                        afterMarket}, this.onEndGetCotacaoDelegate, this.onGetCotacaoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.BeginGetTrades(string ativo, System.DateTime de, System.DateTime ate, string orderBy, int limiteTrades, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTrades(ativo, de, ate, orderBy, limiteTrades, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.EndGetTrades(System.IAsyncResult result) {
            return base.Channel.EndGetTrades(result);
        }
        
        private System.IAsyncResult OnBeginGetTrades(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ativo = ((string)(inValues[0]));
            System.DateTime de = ((System.DateTime)(inValues[1]));
            System.DateTime ate = ((System.DateTime)(inValues[2]));
            string orderBy = ((string)(inValues[3]));
            int limiteTrades = ((int)(inValues[4]));
            return ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).BeginGetTrades(ativo, de, ate, orderBy, limiteTrades, callback, asyncState);
        }
        
        private object[] OnEndGetTrades(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).EndGetTrades(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTradesCompleted(object state) {
            if ((this.GetTradesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTradesCompleted(this, new GetTradesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTradesAsync(string ativo, System.DateTime de, System.DateTime ate, string orderBy, int limiteTrades) {
            this.GetTradesAsync(ativo, de, ate, orderBy, limiteTrades, null);
        }
        
        public void GetTradesAsync(string ativo, System.DateTime de, System.DateTime ate, string orderBy, int limiteTrades, object userState) {
            if ((this.onBeginGetTradesDelegate == null)) {
                this.onBeginGetTradesDelegate = new BeginOperationDelegate(this.OnBeginGetTrades);
            }
            if ((this.onEndGetTradesDelegate == null)) {
                this.onEndGetTradesDelegate = new EndOperationDelegate(this.OnEndGetTrades);
            }
            if ((this.onGetTradesCompletedDelegate == null)) {
                this.onGetTradesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTradesCompleted);
            }
            base.InvokeAsync(this.onBeginGetTradesDelegate, new object[] {
                        ativo,
                        de,
                        ate,
                        orderBy,
                        limiteTrades}, this.onEndGetTradesDelegate, this.onGetTradesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.BeginGetPrincipaisCompradores(string ativo, System.DateTime dtFrom, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPrincipaisCompradores(ativo, dtFrom, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<int, double> Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.EndGetPrincipaisCompradores(System.IAsyncResult result) {
            return base.Channel.EndGetPrincipaisCompradores(result);
        }
        
        private System.IAsyncResult OnBeginGetPrincipaisCompradores(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ativo = ((string)(inValues[0]));
            System.DateTime dtFrom = ((System.DateTime)(inValues[1]));
            return ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).BeginGetPrincipaisCompradores(ativo, dtFrom, callback, asyncState);
        }
        
        private object[] OnEndGetPrincipaisCompradores(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<int, double> retVal = ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).EndGetPrincipaisCompradores(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPrincipaisCompradoresCompleted(object state) {
            if ((this.GetPrincipaisCompradoresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPrincipaisCompradoresCompleted(this, new GetPrincipaisCompradoresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPrincipaisCompradoresAsync(string ativo, System.DateTime dtFrom) {
            this.GetPrincipaisCompradoresAsync(ativo, dtFrom, null);
        }
        
        public void GetPrincipaisCompradoresAsync(string ativo, System.DateTime dtFrom, object userState) {
            if ((this.onBeginGetPrincipaisCompradoresDelegate == null)) {
                this.onBeginGetPrincipaisCompradoresDelegate = new BeginOperationDelegate(this.OnBeginGetPrincipaisCompradores);
            }
            if ((this.onEndGetPrincipaisCompradoresDelegate == null)) {
                this.onEndGetPrincipaisCompradoresDelegate = new EndOperationDelegate(this.OnEndGetPrincipaisCompradores);
            }
            if ((this.onGetPrincipaisCompradoresCompletedDelegate == null)) {
                this.onGetPrincipaisCompradoresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPrincipaisCompradoresCompleted);
            }
            base.InvokeAsync(this.onBeginGetPrincipaisCompradoresDelegate, new object[] {
                        ativo,
                        dtFrom}, this.onEndGetPrincipaisCompradoresDelegate, this.onGetPrincipaisCompradoresCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.BeginGetPrincipaisVendedores(string ativo, System.DateTime dtFrom, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPrincipaisVendedores(ativo, dtFrom, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<int, double> Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF.EndGetPrincipaisVendedores(System.IAsyncResult result) {
            return base.Channel.EndGetPrincipaisVendedores(result);
        }
        
        private System.IAsyncResult OnBeginGetPrincipaisVendedores(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ativo = ((string)(inValues[0]));
            System.DateTime dtFrom = ((System.DateTime)(inValues[1]));
            return ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).BeginGetPrincipaisVendedores(ativo, dtFrom, callback, asyncState);
        }
        
        private object[] OnEndGetPrincipaisVendedores(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<int, double> retVal = ((Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF)(this)).EndGetPrincipaisVendedores(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPrincipaisVendedoresCompleted(object state) {
            if ((this.GetPrincipaisVendedoresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPrincipaisVendedoresCompleted(this, new GetPrincipaisVendedoresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPrincipaisVendedoresAsync(string ativo, System.DateTime dtFrom) {
            this.GetPrincipaisVendedoresAsync(ativo, dtFrom, null);
        }
        
        public void GetPrincipaisVendedoresAsync(string ativo, System.DateTime dtFrom, object userState) {
            if ((this.onBeginGetPrincipaisVendedoresDelegate == null)) {
                this.onBeginGetPrincipaisVendedoresDelegate = new BeginOperationDelegate(this.OnBeginGetPrincipaisVendedores);
            }
            if ((this.onEndGetPrincipaisVendedoresDelegate == null)) {
                this.onEndGetPrincipaisVendedoresDelegate = new EndOperationDelegate(this.OnEndGetPrincipaisVendedores);
            }
            if ((this.onGetPrincipaisVendedoresCompletedDelegate == null)) {
                this.onGetPrincipaisVendedoresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPrincipaisVendedoresCompleted);
            }
            base.InvokeAsync(this.onBeginGetPrincipaisVendedoresDelegate, new object[] {
                        ativo,
                        dtFrom}, this.onEndGetPrincipaisVendedoresDelegate, this.onGetPrincipaisVendedoresCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF CreateChannel() {
            return new MarketDataWCFClientChannel(this);
        }
        
        private class MarketDataWCFClientChannel : ChannelBase<Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF>, Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF {
            
            public MarketDataWCFClientChannel(System.ServiceModel.ClientBase<Traderdata.Client.TerminalWEB.MDApiSVC.IMarketDataWCF> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginValidaToken(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ValidaToken", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndValidaToken(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ValidaToken", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetornaTimeDifferenceBetweenUTCAndExchange(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RetornaTimeDifferenceBetweenUTCAndExchange", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRetornaTimeDifferenceBetweenUTCAndExchange(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RetornaTimeDifferenceBetweenUTCAndExchange", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetornaDataDoServidor(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RetornaDataDoServidor", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTime EndRetornaDataDoServidor(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTime _result = ((System.DateTime)(base.EndInvoke("RetornaDataDoServidor", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCorretoras(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCorretoras", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndGetCorretoras(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("GetCorretoras", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSegmentos(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSegmentos", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndGetSegmentos(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("GetSegmentos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetIndices(bool incluirAtivos, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = incluirAtivos;
                System.IAsyncResult _result = base.BeginInvoke("GetIndices", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndGetIndices(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("GetIndices", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAtivos(string querySymbol, System.Nullable<int> exchange, string tipo, Traderdata.Client.TerminalWEB.MDApiSVC.AtivoDTOReturnType formatoEntrega, string segmento, int maxResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = querySymbol;
                _args[1] = exchange;
                _args[2] = tipo;
                _args[3] = formatoEntrega;
                _args[4] = segmento;
                _args[5] = maxResults;
                System.IAsyncResult _result = base.BeginInvoke("GetAtivos", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndGetAtivos(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("GetAtivos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAtivosByIndice(string indice, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = indice;
                System.IAsyncResult _result = base.BeginInvoke("GetAtivosByIndice", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndGetAtivosByIndice(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("GetAtivosByIndice", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCotacao(string ativo, Traderdata.Server.Core.DTO.CotacaoDTO.BasePeriodicity basePeriodicity, int compression, System.Nullable<System.DateTime> de, System.Nullable<System.DateTime> ate, System.Nullable<bool> delay, System.Nullable<int> maxBarras, bool nominal, bool afterMarket, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = ativo;
                _args[1] = basePeriodicity;
                _args[2] = compression;
                _args[3] = de;
                _args[4] = ate;
                _args[5] = delay;
                _args[6] = maxBarras;
                _args[7] = nominal;
                _args[8] = afterMarket;
                System.IAsyncResult _result = base.BeginInvoke("GetCotacao", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndGetCotacao(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("GetCotacao", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTrades(string ativo, System.DateTime de, System.DateTime ate, string orderBy, int limiteTrades, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = ativo;
                _args[1] = de;
                _args[2] = ate;
                _args[3] = orderBy;
                _args[4] = limiteTrades;
                System.IAsyncResult _result = base.BeginInvoke("GetTrades", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndGetTrades(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("GetTrades", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPrincipaisCompradores(string ativo, System.DateTime dtFrom, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ativo;
                _args[1] = dtFrom;
                System.IAsyncResult _result = base.BeginInvoke("GetPrincipaisCompradores", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<int, double> EndGetPrincipaisCompradores(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<int, double> _result = ((System.Collections.Generic.Dictionary<int, double>)(base.EndInvoke("GetPrincipaisCompradores", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPrincipaisVendedores(string ativo, System.DateTime dtFrom, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ativo;
                _args[1] = dtFrom;
                System.IAsyncResult _result = base.BeginInvoke("GetPrincipaisVendedores", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<int, double> EndGetPrincipaisVendedores(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<int, double> _result = ((System.Collections.Generic.Dictionary<int, double>)(base.EndInvoke("GetPrincipaisVendedores", _args, result)));
                return _result;
            }
        }
    }
}
